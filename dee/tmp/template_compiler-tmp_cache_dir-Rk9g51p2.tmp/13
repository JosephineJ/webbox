import Ember from 'ember';
export default Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};
  var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = '', helper, options;
  data.buffer.push("\n");
  data.buffer.push(escapeExpression((helper = helpers['ghost-typer'] || (depth0 && depth0['ghost-typer']),options={hash:{
    'ghost-nts': ("growingCode")
  },hashTypes:{'ghost-nts': "ID"},hashContexts:{'ghost-nts': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "ghost-typer", options))));
  data.buffer.push("\n");
  return buffer;
  }

  data.buffer.push("<section class=\"fullsize teaseme\">\n<div class=\"center-box\">\n<div class=\"part-1\">\n<p class=\"bio-code\">\n<!-- M89636.1 HUMMAOAB Human monoamine oxidase A (MAOA)  -->\n");
  stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data});
  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
  data.buffer.push("\n<span class=\"typing-rod\" id=\"typing-rod\"></span>\n</p>\n<p class=\"bio-code code-2\">\n</p>\n</div>\n</div>\n</section>\n");
  stack1 = helpers._triageMustache.call(depth0, "outlet", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
  data.buffer.push("\n");
  return buffer;
  
});
